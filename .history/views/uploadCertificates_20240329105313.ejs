<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload Excel Sheet</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="/uploadpage.css">
</head>
<body>
    <div class="dashboard-container">
        <h1>Upload PDF or Image and Select Positions</h1>
        <form id="positionSelectionForm" action="/admin_Dashboard/uploadCertificates" method="post" enctype="multipart/form-data">
            <input type="file" id="pdfFileInput" name="pdfFileInput" accept=".pdf,.png,.jpeg" required>
            <button type="button" id="uploadPdfButton">Upload PDF File</button>
        
            
            <input type="file" id="csvFileInput" name="csvFileInput" accept=".csv, .xlsx" required>
            <button type="button" id="uploadCsvButton">Upload CSV File</button>

            <button type="button" id="selectPositionName" name="selectPositionName" style="display: none;">Select Name Position</button>
            <button type="button" id="selectPositionEvent" name="selectPositionEvent" style="display: none;">Select Event Position</button>
            <button type="button" id="selectPositionDate" name="selectPositionDate" style="display: none;">Select Date Position</button>
            <button type="button" id="finishSelection" name="finishSelection" style="display: none;">Finish Selection</button>
            <button type="button" id="cancelSelection" name="cancelSelection" style="display: none;">Cancel Selection</button>

            <button type="button" id="previewCoordinatesButton" name="previewCoordinatesButton" style="display: none;">Preview Coordinates</button>
            <button type="button" id="previewCoordinatesButton">Preview Coordinates</button>
            <button type="submit" id="submitButton" name="submitButton">Submit</button>
        </form>

        <div id="selectedCoordinatesPreview" style="display: none;">
            <h2>Selected Coordinates:</h2>
            <ul id="coordinatesList"></ul>
            <div id="pdfPreviewContainer" style="display: none;"></div>
            <button type="button" id="closePreviewButton" style="display: none;">Close Preview</button>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.min.js"></script>
    <script>
        var positions = {};
        var currentPositionLabel = null;
        var pdfFile = null;
        var canvas = null;
    
        document.getElementById('uploadPdfButton').addEventListener('click', function() {
            document.getElementById('pdfFileInput').click();
        });
    
        document.getElementById('pdfFileInput').addEventListener('change', function(event) {
            pdfFile = event.target.files[0];
            if (pdfFile) {
                document.getElementById('selectPositionName').style.display = 'block';
                document.getElementById('selectPositionEvent').style.display = 'block';
                document.getElementById('selectPositionDate').style.display = 'block';
            }
        });
    
        function loadPdfWorker() {
            return new Promise(function(resolve, reject) {
                var script = document.createElement('script');
                script.src = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.worker.min.js';
                script.onload = resolve;
                script.onerror = reject;
                document.body.appendChild(script);
            });
        }
    
        async function renderPdf() {
            if (canvas) {
                document.body.removeChild(canvas);
                document.getElementById('cancelSelection').style.display = 'none'; // Hide cancel button when rendering PDF
            }
    
            await loadPdfWorker();
    
            var fileReader = new FileReader();
            fileReader.onload = function() {
                var typedarray = new Uint8Array(this.result);
                pdfjsLib.getDocument(typedarray).promise.then(function(pdf) {
                    pdf.getPage(1).then(function(page) {
                        var viewport = page.getViewport({ scale: 1.0 });
                        var scale = Math.min(
                            window.innerWidth / viewport.width,
                            window.innerHeight / viewport.height
                        );
                        viewport = page.getViewport({ scale: scale });
                        canvas = document.createElement('canvas');
                        canvas.width = viewport.width;
                        canvas.height = viewport.height;
                        canvas.style.border = '1px solid black';
                        canvas.style.cursor = 'crosshair';
                        var ctx = canvas.getContext('2d');
                        var renderContext = {
                            canvasContext: ctx,
                            viewport: viewport
                        };
                        page.render(renderContext);
                        document.body.appendChild(canvas);
    
                        // Function to add hidden input fields for coordinates to the form
                        function addCoordinatesToForm() {
                            // Remove any existing hidden input fields for coordinates
                            var existingInputs = document.querySelectorAll('input[name^="coordinates["]');
                            existingInputs.forEach(function(input) {
                                input.parentNode.removeChild(input);
                            });
    
                            // Add new hidden input fields for each set of coordinates
                            Object.keys(positions).forEach(function(key, index) {
                                var inputX = document.createElement('input');
                                inputX.type = 'hidden';
                                inputX.name = 'coordinates[' + key + '][x]';
                                inputX.value = positions[key].x;
                                document.getElementById('positionSelectionForm').appendChild(inputX);
    
                                var inputY = document.createElement('input');
                                inputY.type = 'hidden';
                                inputY.name = 'coordinates[' + key + '][y]';
                                inputY.value = positions[key].y;
                                document.getElementById('positionSelectionForm').appendChild(inputY);
                            });
                        }
    
                        canvas.addEventListener('click', function(event) {
                            var rect = canvas.getBoundingClientRect();
                            var x = event.clientX - rect.left;
                            var y = event.clientY - rect.top;
                            positions[currentPositionLabel] = { x: x, y: y };
                            console.log(currentPositionLabel + ' Position:', { x: x, y: y });
                            // Add coordinates to form
                            addCoordinatesToForm();
                            document.body.removeChild(canvas);
                            canvas = null;
                            document.getElementById('cancelSelection').style.display = 'none'; // Hide cancel button after selecting position
                            document.getElementById('previewCoordinatesButton').style.display = 'block'; // Show preview coordinates button
                        });
                    });
                });
            };
            fileReader.readAsArrayBuffer(pdfFile);
        }
    
        document.getElementById('selectPositionName').addEventListener('click', function() {
            currentPositionLabel = 'Name';
            renderPdf();
            document.getElementById('cancelSelection').style.display = 'block';
        });
    
        document.getElementById('selectPositionEvent').addEventListener('click', function() {
            currentPositionLabel = 'Event Name';
            renderPdf();
            document.getElementById('cancelSelection').style.display = 'block';
        });
    
        document.getElementById('selectPositionDate').addEventListener('click', function() {
            currentPositionLabel = 'Date';
            renderPdf();
            document.getElementById('cancelSelection').style.display = 'block';
        });
    
        document.getElementById('previewCoordinatesButton').addEventListener('click', function() {
            var previewWindow = window.open('', '_blank');
            var previewContent = '<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>PDF Preview</title><script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.min.js"></script><script>var pdfViewer;function loadPdf() {var file = "' + URL.createObjectURL(pdfFile) + '";var loadingTask = pdfjsLib.getDocument(file);loadingTask.promise.then(function(pdf) {pdf.getPage(1).then(function(page) {var scale = 1;var viewport = page.getViewport({scale: scale,});var canvas = document.createElement("canvas");var context = canvas.getContext("2d");canvas.height = viewport.height;canvas.width = viewport.width;var renderContext = {canvasContext: context,viewport: viewport,};page.render(renderContext).promise.then(function() {pdfViewer = document.getElementById("pdfViewer");pdfViewer.appendChild(canvas);});});});}window.onload = loadPdf;</script></head><body><div id="pdfViewer"></div></body></html>';
            previewWindow.document.write(previewContent);
        });
    
        document.getElementById('cancelSelection').addEventListener('click', function() {
            if (canvas) {
                document.body.removeChild(canvas);
                canvas = null;
            }
            document.getElementById('cancelSelection').style.display = 'none';
        });
    </script>    
</body>
</html>