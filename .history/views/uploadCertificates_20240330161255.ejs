<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Upload PDF, Image, or CSV and Select Positions</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css"/>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="/uploadpage.css">
    <style>
        /* CSS for modal popup */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 1; /* Sit on top */
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            width: 90%; /* Fixed width */
            height: 90%; /* Fixed height */
            overflow: hidden; /* Hide scrollbars */
            background-color: rgba(0, 0, 0, 0.5); /* Black w/ opacity */
        }
        .modal-content {
            background-color: #fefefe;
            padding: 0; /* Adjust padding */
            border: 1px solid #888;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
            overflow: hidden; /* Hide scrollbars */
            position: relative; /* Added */
        }
        /* Add animation on modal popup */
        @keyframes animatetop {
            from {top: -300px; opacity: 0}
            to {top: 0; opacity: 1}
        }
        /* Close button style */
        .close {
            color: #aaa;
            position: absolute; /* Adjust position */
            top: 10px; /* Adjust top */
            right: 10px; /* Adjust right */
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <h1>Upload PDF, Image, or CSV and Select Positions</h1>
        <form id="positionSelectionForm" action="/admin_Dashboard/uploadCertificates" method="post" enctype="multipart/form-data">
            <input type="file" id="fileInput" name="pdfFileInput" accept=".pdf,.png,.jpeg,.csv" required>
            <button type="button" id="uploadFileButton">Upload File</button>

            <input type="file" id="csvFileInput" name="csvFileInput" accept=".csv, .xlsx" required>            
            <button type="button" id="uploadCsvButton">Upload CSV File</button>

            <button type="button" id="selectPositionName" name="selectPositionName" style="display: none;">Select Name Position</button>
            <button type="button" id="selectPositionEvent" name="selectPositionEvent" style="display: none;">Select Event Position</button>
            <button type="button" id="selectPositionDate" name="selectPositionDate" style="display: none;">Select Date Position</button>

            <button type="button" id="finishSelection" name="finishSelection" style="display: none;">Finish Selection</button>
            <button type="button" id="cancelSelection" name="cancelSelection" style="display: none;">Cancel Selection</button>


            <!-- Hidden input fields for coordinates -->
            <input type="hidden" id="namePositionXInput" name="namePositionX">
            <input type="hidden" id="namePositionYInput" name="namePositionY">
            <input type="hidden" id="eventPositionXInput" name="eventPositionX">
            <input type="hidden" id="eventPositionYInput" name="eventPositionY">
            <input type="hidden" id="datePositionXInput" name="datePositionX">
            <input type="hidden" id="datePositionYInput" name="datePositionY">

            <button type="button" id="previewCoordinatesButton">Preview Coordinates</button>
            <button type="submit" id="submitButton" name="submitButton">Submit</button>
        </form>

        <div id="selectedCoordinatesPreview" style="display: none;">
            <h2>Selected Coordinates:</h2>
            <ul id="coordinatesList"></ul>
            <div id="pdfPreviewContainer" style="display: none;"></div>
            <button type="button" id="closePreviewButton" style="display: none;">Close Preview</button>
        </div>
    </div>

    <div id="pdfModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closePdfModal()">&times;</span>
            <div id="pdfViewer"></div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.11.338/pdf.min.js"></script>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
          var fileInput = document.getElementById('fileInput');
          var uploadFileButton = document.getElementById('uploadFileButton');
          var selectPositionName = document.getElementById('selectPositionName');
          var selectPositionEvent = document.getElementById('selectPositionEvent');
          var selectPositionDate = document.getElementById('selectPositionDate');
          var cancelSelection = document.getElementById('cancelSelection');
          var namePositionXInput = document.getElementById('namePositionXInput');
          var namePositionYInput = document.getElementById('namePositionYInput');
          var eventPositionXInput = document.getElementById('eventPositionXInput');
          var eventPositionYInput = document.getElementById('eventPositionYInput');
          var datePositionXInput = document.getElementById('datePositionXInput');
          var datePositionYInput = document.getElementById('datePositionYInput');
          var pdfFile = null;
          var nameX = null;
          var nameY = null;
          var eventX = null;
          var eventY = null;
          var dateX = null;
          var dateY = null;
          var currentPosition = null;
  
          uploadFileButton.addEventListener('click', function() {
              fileInput.click();
          });
  
          fileInput.addEventListener('change', function(event) {
              pdfFile = event.target.files[0];
              if (pdfFile) {
                  if (pdfFile.type === 'application/pdf' || pdfFile.type === 'image/png' || pdfFile.type === 'image/jpeg') {
                      selectPositionName.style.display = 'block';
                      selectPositionEvent.style.display = 'block';
                      selectPositionDate.style.display = 'block';
                  }
              }
          });
  
          function openPdfPopup(url) {
              var width = 600;
              var height = 400;
              var left = (screen.width - width) / 2;
              var top = (screen.height - height) / 2;
              var options = 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + width + ', height=' + height + ', top=' + top + ', left=' + left;
              return window.open(url, 'PDFPopup', options);
          }
  
          async function extractCoordinates(pdf) {
              const page = await pdf.getPage(1);
              const nameTextContent = await page.getTextContent();
              // Example: Extracting the coordinates of the first character
              const firstCharacter = nameTextContent.items[0];
              return { x: firstCharacter.transform[4], y: firstCharacter.transform[5] };
          }
  
          function renderPdf() {
              var fileReader = new FileReader();
              fileReader.onload = function() {
                  var typedarray = new Uint8Array(this.result);
                  pdfjsLib.getDocument(typedarray).promise.then(function(pdf) {
                      var popup = openPdfPopup(URL.createObjectURL(pdfFile));
                      popup.onload = function() {
                          popup.document.addEventListener('click', function(event) {
                              var rect = event.target.getBoundingClientRect();
                              var x = event.clientX - rect.left;
                              var y = event.clientY - rect.top;
                              switch (currentPosition) {
                                  case 'Name':
                                      nameX = x;
                                      nameY = y;
                                      namePositionXInput.value = nameX;
                                      namePositionYInput.value = nameY;
                                      break;
                                  case 'Event':
                                      eventX = x;
                                      eventY = y;
                                      eventPositionXInput.value = eventX;
                                      eventPositionYInput.value = eventY;
                                      break;
                                  case 'Date':
                                      dateX = x;
                                      dateY = y;
                                      datePositionXInput.value = dateX;
                                      datePositionYInput.value = dateY;
                                      break;
                                  default:
                                      console.log('Unknown position:', currentPosition);
                                      break;
                              }
                              console.log('Position ' + currentPosition + ' selected: x=' + x + ', y=' + y);
                              closePdfModal();
                          });
                      };
                  }).catch(function(error) {
                      console.error('Error rendering PDF:', error);
                  });
              };
              fileReader.readAsArrayBuffer(pdfFile);
          }
  
          selectPositionName.addEventListener('click', function() {
              currentPosition = 'Name';
              renderPdf();
          });
  
          selectPositionEvent.addEventListener('click', function() {
              currentPosition = 'Event';
              renderPdf();
          });
  
          selectPositionDate.addEventListener('click', function() {
              currentPosition = 'Date';
              renderPdf();
          });
  
          cancelSelection.addEventListener('click', function() {
              closePdfModal();
              currentPosition = null;
          });
      });
  </script>
</body>
</html>
